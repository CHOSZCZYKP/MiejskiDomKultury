// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiejskiDomKultury.Data;

#nullable disable

namespace MiejskiDomKultury.Migrations
{
    [DbContext(typeof(DbContextDomKultury))]
    [Migration("20250519200948_mig12")]
    partial class mig12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiejskiDomKultury.Model.Ban", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dlugosc")
                        .HasColumnType("int");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<string>("Przyczyna")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Bany");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aktorzy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gatunki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlakatURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rok")
                        .HasColumnType("int");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filmy");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Ogloszenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ogloszenia");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Przedmiot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CenaZaDobe_Waluta")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("CenaZaDobe_Wartosc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Dostepnosc")
                        .HasColumnType("bit");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Stan")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Przedmioty");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Rezerwacja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DoKiedy")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSali")
                        .HasColumnType("int");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<DateTime>("OdKiedy")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdSali");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Rezerwacje");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CenaZaGodz_Waluta")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("CenaZaGodz_Wartosc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IloscMiejsc")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Seans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Czas")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Seanse");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.SeansBilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeansId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeansId");

                    b.ToTable("Bilety");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Transakcja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<string>("Kwota_Waluta")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("Kwota_Wartosc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Transakcje");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CzyMaBana")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazwaUzytkownika")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Wypozyczenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataWypozyczenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataZwrotu")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrzedmiotu")
                        .HasColumnType("int");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPrzedmiotu");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Wypozyczenia");
                });

            modelBuilder.Entity("SeansUzytkownik", b =>
                {
                    b.Property<int>("SeanseId")
                        .HasColumnType("int");

                    b.Property<int>("WidzowieId")
                        .HasColumnType("int");

                    b.HasKey("SeanseId", "WidzowieId");

                    b.HasIndex("WidzowieId");

                    b.ToTable("SeansUzytkownik");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Ban", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Uzytkownik", "Uzytkownik")
                        .WithMany("Bany")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Rezerwacja", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Sala", "Sala")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("IdSali")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiejskiDomKultury.Model.Uzytkownik", "Uzytkownik")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Seans", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.SeansBilet", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Seans", "Seans")
                        .WithMany()
                        .HasForeignKey("SeansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seans");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Transakcja", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Uzytkownik", "Uzytkownik")
                        .WithMany("Transakcje")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Wypozyczenie", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Przedmiot", "Przedmiot")
                        .WithMany("Wypozyczenia")
                        .HasForeignKey("IdPrzedmiotu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiejskiDomKultury.Model.Uzytkownik", "Uzytkownik")
                        .WithMany("Wypozyczenia")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Przedmiot");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("SeansUzytkownik", b =>
                {
                    b.HasOne("MiejskiDomKultury.Model.Seans", null)
                        .WithMany()
                        .HasForeignKey("SeanseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiejskiDomKultury.Model.Uzytkownik", null)
                        .WithMany()
                        .HasForeignKey("WidzowieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Przedmiot", b =>
                {
                    b.Navigation("Wypozyczenia");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Sala", b =>
                {
                    b.Navigation("Rezerwacje");
                });

            modelBuilder.Entity("MiejskiDomKultury.Model.Uzytkownik", b =>
                {
                    b.Navigation("Bany");

                    b.Navigation("Rezerwacje");

                    b.Navigation("Transakcje");

                    b.Navigation("Wypozyczenia");
                });
#pragma warning restore 612, 618
        }
    }
}
